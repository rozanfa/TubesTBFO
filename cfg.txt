PROGRAM_GRAMMAR -> CODE_CONTENT

CODE_CONTENT -> CODE_CONTENT CODE_CONTENT | ENDL | IMPORT_GRAMMAR | FOR_LOOP_GRAMMAR | WHILE_LOOP_GRAMMAR | CONDITIONAL_GRAMMAR | INT 
===================================================================================================================================================
/* IMPORT */

IMPORT_GRAMMAR -> IMPORT_GRAMMAR ENDL IMPORT_GRAMMAR | IMPORT LIB ENDL | FROM LIB IMPORT LIB_CONTENT ENDL | IMPORT LIB AS VAR ENDL | FROM LIB IMPORT CONTENT AS VAR ENDL | IMPORT MULTIPLE_IMPORT
MULTIPLE_IMPORT -> MULTIPLE_IMPORT KOMA MULTIPLE_IMPORT | LIB AS VAR 
LIB_CONTENT -> LIB_CONTENT KOMA LIB_CONTENT | CONTENT
FROM -> P
IMPORT -> Q
AS -> R
LIB -> X
CONTENT -> X


/* FOR LOOP */

FOR_LOOP_GRAMMAR -> FOR_LOOP_HEADER LOOP_CONTENT 
FOR_LOOP_HEADER -> FOR VAR IN ITERATABLE TITIK_DUA ENDL

FOR -> F
IN -> G
ITERATABLE -> RANGE_FUNC | TUPLE | LIST | STRING
RANGE_FUNC -> RANGE INT_KURUNG

/* WHILE LOOP */

WHILE_LOOP_GRAMMAR -> WHILE_LOOP_HEADER LOOP_CONTENT
WHILE_LOOP_HEADER -> WHILE BOOL_EXPRESSION TITIK_DUA ENDL

WHILE -> W


LOOP_CONTENT -> LOOP_CONTENT LOOP_CONTENT | CONTINUE | CODE_CONTENT

CONTINUE -> C

INT -> VAR | NUMBER


/* CONDITIONAL */

CONDITIONAL_GRAMMAR -> IF_HEADER CONDITIONAL_CONTENT | IF_HEADER CONDITIONAL_CONTENT ELSE_CONDITION
IF_HEADER -> IF BOOL_EXPRESSION TITIK_DUA ENDL
IF -> I

ELSE_CONDITION -> ELSE_GRAMMAR | ELIF_GRAMMAR ELSE_GRAMMAR

ELIF_GRAMMAR -> ELIF_GRAMMAR ELIF_GRAMMAR | ELIF_HEADER CONDITIONAL_CONTENT
ELIF_HEADER -> ELIF | BOOL_EXPRESSION TITIK_DUA ENDL
ELIF -> J

ELSE_GRAMMAR -> ELSE_HEADER CONDITIONAL_CONTENT
ELSE_HEADER -> ELSE | BOOL_EXPRESSION TITIK_DUA ENDL
ELSE -> K

CONDITIONAL_CONTENT -> CONDITIONAL_CONTENT CONDITIONAL_CONTENT | PASS | CODE_CONTENT 
/* RAISE */
/* Opsi Satu */
RAISE_GRAMMAR -> RAISE RAISE_CONTENT
RAISE_CONTENT ->  KURUNG_BUKA RAISE_CONTETNT KURUNG_TUTUP | VARIABLE | CONSTANT | FUNCTION | LIST | STRING | DICT | NONE | COND_OP | ART_OP | METH_CONTENT
RAISE -> n

/* Opsi Dua */
RAISE_GRAMMAR -> RAISE EROR_TYPE RAISE_CONTETNT
EROR_TYPE -> AttributeError | EOFError | FloatingPointError | GeneratorExit | ImportError | IndexError | KeyError | KeyboardInterrupt | MemoryError | NameError | NotImplementedError | OSError | OverflowError | ReferenceError | RuntimeError | StopIteration | SyntaxError | IndentationError | TabError | SystemError | SystemExit | TypeError | UnboundLocalError | UnicodeError | UnicodeEncodeError | UnicodeDecodeError | UnicodeTranslateError | ValueError | ZeroDivisionError
RAISE_CONTENT ->  KURUNG_BUKA RAISE_CONTETNT KURUNG_TUTUP | VARIABLE | CONSTANT | FUNCTION | LIST | STRING | DICT | NONE | COND_OP | ART_OP | METH_CONTENT
RAISE -> n

/* OPEN_FILE */
OPEN_FILE_GRAMMAR -> WITH_HEADER CONTENT

===================================================================================================================================================

PASS -> Z
===================================================================================================================================================



VAR -> X
NUMBER -> N


/* SYMBOLS */

TITIK_DUA -> :
PETIK -> '
PETIK_DUA -> "
TITIK -> .
KOMA -> ,

ENDL -> ENDL ENDL | endl
SPASI -> SPASI SPASI | spasi

INT_KURUNG -> KURUNG_BUKA INT KURUNG_TUTUP | KURUNG_BUKA ENDL INT KURUNG_TUTUP | KURUNG_BUKA INT ENDL KURUNG_TUTUP | KURUNG_BUKA ENDL INT ENDL KURUNG_TUTUP
KURUNG_BUKA -> (
KURUNG_TUTUP -> )
KURUNG_SIKU_BUKA -> [
KURUNG_SIKU_TUTUP -> ]
KURUNG_KURAWAL_BUKA -> {
KURUNG_KURAWAL_TUTUP -> }
